{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///./src/js/os/get_output_neur.js","webpack:///./src/js/os/get_chip_matrix.js","webpack:///./src/js/utils/jsStruct.js","webpack:///./src/images/类脑计算机.png","webpack:///./src/App.vue?1b96","webpack:///src/App.vue","webpack:///./src/js/echarts/get_topology_echarts.js","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?b41a","webpack:///./src/js/pages/home.js","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/js/utils/utils.js","webpack:///./src/js/os/get_slave_boards.js","webpack:///./src/views/Home.vue?33cf"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","get_output_neur","ip_str","chip_index","callback","$","ajax","url","placeholder","cache","xhr","XMLHttpRequest","responseType","success","blob_buf","output_neru_set","Set","blob_to_uint32","chip_x","Math","floor","chip_y","npu_x_offset","npu_y_offset","raw_data_list","extract_data","raw_data","x","toString","y","add","JSON","stringify","log","get_chip_matrix","nodeID","reader","FileReader","readAsArrayBuffer","array_buffer","four_chip_matrix","Struct","array","uint16","big_chip_matrix","struct_length","struct_num","ceil","byteLength","readStructs","which_small_board","one_chip_matrix","output_neur_set","has","res","nextStructId","int8","readCode","defaultValue","structProperty","uint8","int16","int32","uint32","float32","float64","string","struct","skip","properties","arguments","configurable","writable","this","struct_type_id","parseScript","parseFunc","Function","readString","buffer","offset","charBuffer","str","Uint8Array","char","String","fromCharCode","readInt8Array","elements","Int8Array","v","DataView","getInt8","readUint8Array","getUint8","readInt16Array","Int16Array","getInt16","readUint16Array","Uint16Array","getUint16","readInt32Array","Int32Array","getInt32","readUint32Array","Uint32Array","getUint32","readFloat32Array","Float32Array","getFloat32","readFloat64Array","Float64Array","getFloat64","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","updateTreeView","nodes","models","tasks","slave_board","ip","join","id","chips","usedNeureNums","role","JSONdata","node","model_file","nodeIP","model","task","method","response","bodyH","h","setInterval","myChart","component","staticClass","_m","_v","systemStatus","_e","_s","totalNodeNum","masterNodeNum","shadowNodeNum","slaveNodeNum","runNodeNum","totalChipNum","runChipNum","totalNeureNum","runNeureNum","echarts","require","colors","c1","c2","toppoElementID","listRunNode","masterNodeID","shadowNodeID","listData","list","links","option","toolbox","show","left","right","top","bottom","selectedMode","animationDuration","animationEasingUpdate","series","hoverAnimation","layout","force","repulsion","edgeLength","nodeScaleRatio","draggable","roam","symbol","focusNodeAdjacency","scaleLimit","min","max","edgeSymbol","edgeSymbolSize","label","normal","position","color","distance","fontSize","lineStyle","width","curveness","getData","masterID","allNodeNum","obj","arr","handle3","index","forEach","item","item2","eq","includes","category","source","handle2","idx","symbolSize","rotate","bgcolor","colorStops","global","itemStyle","borderColor","isEnd","isdisease","assign","shadowColor","shadowBlur","root","drawTopologyEchart","shadowID","runNodeIDList","router","dom","getElementById","existInstance","getInstanceByDom","dispose","init","parse","setOption","addNodeRouter","addEventListener","resize","refreshEchart","getOption","on","param","arrayIndex","dataType","path","query","vue_controler","input_board_id","nodeList","notMasterNodeNum","runNodeInfo","mounted","_this","get_slave_boards","slave_boards","_node_list","status","file_list","rule","empty_node_matrix_data","Array","fill","empty_node","node_matrix_data","$router","beforeRouteEnter","to","from","next","vm","location","reload","watch","methods","Vue","use","VueRouter","originalPush","catch","routes","Home","Vuex","Store","state","mutations","actions","Element","config","productionTip","store","render","App","$mount","arrayBufferToBuffer","arrayBuffer","buf","Buffer","view","ret","slice_len","Number","concat","array_sum","array_","sum","array_equal","array1","array2","walk_data","data_length","array_mean","avg","_uint32_array","uint32_array","trancat","call_back","MAX_NAME_LEN","MAX_FILE_NUM","struct_size","board_info","slave_boards_0"],"mappings":"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","file":"js/app.7bafaff2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"4bae2ee4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"about\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"f3f2f347\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import $ from \"jquery\";\r\nimport { blob_to_uint32, extract_data } from \"../utils/utils\";\r\n\r\n\r\n// \r\n/**\r\n * 获取输出神经元，\r\n * @param {*} ip_str 单个板子的ip \r\n * @param {*} chip_index  芯片的id\r\n * @param {*} callback  回调函数\r\n */\r\nfunction get_output_neur(ip_str, chip_index, callback) {\r\n  $.ajax({\r\n    url: \"http://\" + ip_str + \"/get_result/\",\r\n    type: \"post\",\r\n    data: { placeholder: 99 },\r\n    cache: false,\r\n    xhr: function () {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";\r\n      return xhr;\r\n    },\r\n    success: function (blob_buf) {\r\n      let output_neru_set = new Set();\r\n      try {\r\n        blob_to_uint32(blob_buf, function (data) {\r\n          let chip_x = Math.floor(chip_index / 2);\r\n          let chip_y = chip_index % 2;\r\n          let npu_x_offset = chip_x * 24;\r\n          let npu_y_offset = chip_y * 24;\r\n\r\n          let raw_data_list = extract_data(data);\r\n          for (let i = 0; i < raw_data_list.length; i += 2) {\r\n            let raw_data = raw_data_list[i];\r\n            let _temp = raw_data.toString(16);\r\n            let x = (raw_data >> 6) & 0x0000003f;\r\n            let y = (raw_data >> 0) & 0x0000003f;\r\n            output_neru_set.add(\r\n              JSON.stringify([x - npu_x_offset, y - npu_y_offset])\r\n            );\r\n            break;\r\n          }\r\n          console.log(\"try get output neru set ok:\", output_neru_set);\r\n          // callback(output_neru_set);\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        console.log(\"finally\", output_neru_set);\r\n        callback(output_neru_set); // 不管能不能获取输出神经元，都要执行callback\r\n      }\r\n    },\r\n    error: function (err) {\r\n      console.log(err);\r\n    },\r\n  });\r\n}\r\n\r\nexport { get_output_neur };\r\n","import { Struct } from \"../utils/jsStruct\";\r\nimport $ from \"jquery\";\r\nimport { get_output_neur } from \"./get_output_neur\"\r\n\r\n\r\nfunction get_big_chip_matrix(ip_str, callback) {\r\n  $.ajax({\r\n    url: \"http://\" + ip_str + \"/get_big_chip_matrix/\",\r\n    type: \"POST\",\r\n    data: { type: \"brain_electricity\" },\r\n    xhr: function () {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";\r\n      return xhr;\r\n    },\r\n    success: function (blob_buf) {\r\n      console.log(\"big    \", blob_buf);\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(blob_buf);\r\n      reader.onload = function () {\r\n        let array_buffer = reader.result;\r\n        let four_chip_matrix = Struct.create(\r\n          Struct.array(\"one_chip_matrix\", Struct.uint16(), 48 * 48)\r\n          // 每个板子上有3组芯片，每组4个，2行2列排列，每个芯片有24*24个神经元簇，矩阵大小为48*48\r\n        );\r\n        let big_chip_matrix = Struct.create(\r\n          Struct.array(\"four_chip_matrix\", four_chip_matrix, 3) // 3组\r\n        );\r\n\r\n        let struct_length = 3 * 48 * 48 * 2; // 2是啥意思?\r\n        let struct_num = Math.ceil(array_buffer.byteLength / struct_length);\r\n        big_chip_matrix = big_chip_matrix.readStructs(\r\n          array_buffer,\r\n          0,\r\n          struct_num\r\n        );\r\n\r\n        callback(big_chip_matrix);\r\n      };\r\n    },\r\n    error: function (res) {\r\n      console.log(res);\r\n      // 错误时处理逻辑\r\n    },\r\n  });\r\n}\r\n\r\n// big_chip_matrix是整个12个芯片（3组），2*2排列\r\n// chip_index: 0-11\r\nfunction extract_one_chip_matrix(big_chip_matrix, chip_index) {\r\n  let which_small_board = Math.floor(chip_index / 4); // 0-2编号\r\n  let chip_x = Math.floor((chip_index % 4) / 2); // 0-1\r\n  let chip_y = (chip_index % 4) % 2; // 0-1\r\n  let npu_x_offset = chip_x * 24;\r\n  let npu_y_offset = chip_y * 24;\r\n\r\n  let data = [];\r\n  let raw_data =\r\n    big_chip_matrix[0].four_chip_matrix[which_small_board]\r\n      .one_chip_matrix; /* shape: (48*48, ) */\r\n  for (let i = 0; i < 24; i++) {\r\n    data.push([]);\r\n    for (let j = 0; j < 24; j++) {\r\n      data[i].push(raw_data[i + npu_x_offset + (j + npu_y_offset) * 48]);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n// ip_str: 板子的ip地址，chip_index： 芯片编号\r\n/**\r\n *  根据板子id获取整个板子上12个芯片的神经元状态图，然后根据芯片id绘图-画某单个芯片的图\r\n * @param {*} ip_str  板子的ip地址\r\n * @param {*} nodeID  板子的ID\r\n * @param {*} chip_index  芯片编号\r\n * @param {*} callback  回调函数\r\n */\r\nfunction get_chip_matrix(ip_str, nodeID, chip_index, callback) {\r\n\r\n  $.ajax({\r\n    url: \"http://192.168.1.254/get_big_chip_matrix/\",\r\n    type: \"POST\",\r\n    data: {\r\n      type: nodeID,\r\n    },\r\n    xhr: function () {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";\r\n      return xhr;\r\n    },\r\n    success: function (blob_buf) {\r\n      let reader = new FileReader();\r\n      reader.readAsArrayBuffer(blob_buf);\r\n      reader.onload = function () {\r\n        let array_buffer = reader.result;\r\n        let four_chip_matrix = Struct.create(\r\n          Struct.array(\"one_chip_matrix\", Struct.uint16(), 48 * 48)\r\n          // 每个板子上有3组芯片，每组4个，2行2列排列，每个芯片有24*24个神经元簇，矩阵大小为48*48\r\n        );\r\n        // big_chip_matrix 3组共12个芯片\r\n        let big_chip_matrix = Struct.create(\r\n          Struct.array(\"four_chip_matrix\", four_chip_matrix, 3)\r\n        );\r\n\r\n        let struct_length = 3 * 48 * 48 * 2; // 2?\r\n        let struct_num = Math.ceil(array_buffer.byteLength / struct_length);\r\n        big_chip_matrix = big_chip_matrix.readStructs(\r\n          array_buffer,\r\n          0,\r\n          struct_num\r\n        );\r\n\r\n        let which_small_board = Math.floor(chip_index / 4);\r\n        let chip_x = Math.floor((chip_index % 4) / 2);\r\n        let chip_y = (chip_index % 4) % 2;\r\n        let npu_x_offset = chip_x * 24;\r\n        let npu_y_offset = chip_y * 24;\r\n\r\n        let data = [];\r\n        // big_chip_matrix到底几个元素啊？定义是3，struct_length也是3？\r\n        let raw_data = big_chip_matrix[0].four_chip_matrix[which_small_board].one_chip_matrix; /* shape: (48*48, ) */\r\n        for (let i = 0; i < 24; i++) {\r\n          for (let j = 0; j < 24; j++) {\r\n            data.push([\r\n              j,\r\n              i,\r\n              raw_data[i + npu_x_offset + (j + npu_y_offset) * 48],\r\n            ]);\r\n          }\r\n        }\r\n        console.log(\"big    \", big_chip_matrix[0]);\r\n\r\n        // 获取输出神经元， 将data值置为-1，画图用红色表示。\r\n        get_output_neur(ip_str, chip_index, function (output_neur_set) {\r\n\r\n          for (let i = 0; i < data.length; i++) {\r\n            let x = data[i][0];\r\n            let y = data[i][1];\r\n            if (output_neur_set.has(JSON.stringify([x, y]))) {\r\n              data[i] = [x, y, -1];\r\n            }\r\n          }\r\n          callback(data);\r\n        });\r\n      };\r\n    },\r\n    error: function (res) {\r\n      console.log(res);\r\n      // // 错误时处理逻辑\r\n      // let data = [];\r\n      // callback(data);\r\n    },\r\n  });\r\n}\r\n\r\nexport { get_big_chip_matrix, extract_one_chip_matrix, get_chip_matrix };\r\n","/*\r\n * js-struct.js - Utility to assist in parsing c-style structs from an ArrayBuffer\r\n */\r\n\r\n/*\r\n * Copyright (c) 2011 Brandon Jones\r\n *\r\n * This software is provided 'as-is', without any express or implied\r\n * warranty. In no event will the authors be held liable for any damages\r\n * arising from the use of this software.\r\n *\r\n * Permission is granted to anyone to use this software for any purpose,\r\n * including commercial applications, and to alter it and redistribute it\r\n * freely, subject to the following restrictions:\r\n *\r\n *    1. The origin of this software must not be misrepresented; you must not\r\n *    claim that you wrote the original software. If you use this software\r\n *    in a product, an acknowledgment in the product documentation would be\r\n *    appreciated but is not required.\r\n *\r\n *    2. Altered source versions must be plainly marked as such, and must not\r\n *    be misrepresented as being the original software.\r\n *\r\n *    3. This notice may not be removed or altered from any source\r\n *    distribution.\r\n */\r\n\r\n\"use strict\";\r\n\r\n// TODO: Ugh, this is messy. Do it differentely soon, please!\r\nvar nextStructId = 0;\r\n\r\nvar Struct = Object.create(Object, {\r\n  /**\r\n   * Defines a single byte integer value (byte/char).\r\n   * @param name Property name\r\n   */\r\n  int8: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getInt8(o, true);\",\r\n        byteLength: 1,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines an unsigned single byte integer value (ubyte/uchar).\r\n   * @param name Property name\r\n   */\r\n  uint8: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getUint8(o, true);\",\r\n        byteLength: 1,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a two byte integer value (short).\r\n   * @param name Property name\r\n   */\r\n  int16: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getInt16(o, true);\",\r\n        byteLength: 2,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines an unsigned two byte integer value (ushort).\r\n   * @param name Property name\r\n   */\r\n  uint16: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getUint16(o, true);\",\r\n        byteLength: 2,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a four byte integer value (int/long).\r\n   * @param name Property name\r\n   */\r\n  int32: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getInt32(o, true);\",\r\n        byteLength: 4,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines an unsigned four byte integer value (uint/ulong).\r\n   * @param name Property name\r\n   */\r\n  uint32: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getUint32(o, true);\",\r\n        byteLength: 4,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a four byte floating point value (float).\r\n   * @param name Property name\r\n   */\r\n  float32: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getFloat32(o, true);\",\r\n        byteLength: 4,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines an eight byte floating point value (double).\r\n   * @param name Property name\r\n   */\r\n  float64: {\r\n    value: function(name) {\r\n      return {\r\n        name: name,\r\n        readCode: \"v.getFloat64(o, true);\",\r\n        byteLength: 8,\r\n        defaultValue: 0,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a fixed-length ASCII string.\r\n   * Will always read the number of characters specified, but the returned string will truncate at the first null char.\r\n   * @param name Property name\r\n   * @param length Number of characters to read\r\n   */\r\n  string: {\r\n    value: function(name, length) {\r\n      var code = \"(function(o) {\\n\";\r\n      code += '   var str = \"\";\\n';\r\n      code += \"   for(var j = 0; j < \" + length + \"; ++j) {\\n\";\r\n      code += \"       var char = v.getUint8(o+j, true);\\n\";\r\n      code += \"       if(char === 0) { break; }\\n\";\r\n      code += \"       str += String.fromCharCode(char);\\n\";\r\n      code += \"   }\\n\";\r\n      code += \"   return str;\\n\";\r\n      code += \"})(o);\\n\";\r\n      return {\r\n        name: name,\r\n        readCode: code,\r\n        byteLength: length,\r\n        defaultValue: \"\",\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a fixed-length array of structs or primitives\r\n   * @param name Property name\r\n   * @param type struct or primitive type to read\r\n   * @param length Number of elements to read. Total bytes read will be type.byteLength * length\r\n   */\r\n  array: {\r\n    value: function(name, type, length) {\r\n      var code = \"(function(o) {\\n\";\r\n      code += \"   var aa = new Array(\" + length + \"), av;\\n\";\r\n      code += \"   for(var j = 0; j < \" + length + \"; ++j) {\\n\";\r\n      code += \"       av = \" + type.readCode + \"\\n\";\r\n      code += \"       o += \" + type.byteLength + \";\\n\";\r\n      code += \"       aa[j] = av;\\n\";\r\n      code += \"   }\\n\";\r\n      code += \"   return aa;\\n\";\r\n      code += \"})(o);\\n\";\r\n      return {\r\n        name: name,\r\n        readCode: code,\r\n        byteLength: type.byteLength * length,\r\n        defaultValue: null,\r\n        array: true,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a nested struct\r\n   * @param name Property name\r\n   * @param struct Struct to read\r\n   */\r\n  struct: {\r\n    value: function(name, struct) {\r\n      return {\r\n        name: name,\r\n        readCode: struct.readCode,\r\n        byteLength: struct.byteLength,\r\n        defaultValue: null,\r\n        struct: true,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Defines a number of the bytes to be skipped over.\r\n   * @param length Number of bytes to be skipped\r\n   */\r\n  skip: {\r\n    value: function(length) {\r\n      return {\r\n        name: null,\r\n        readCode: \"null;\\n\",\r\n        byteLength: length,\r\n        structProperty: true,\r\n      };\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Compiles the code to read a struct from the struct's definition\r\n   * @param structDef Object sequentially defining the binary types to read\r\n   * @param prototype Optional, additional prototypes to apply to the returned struct object\r\n   * @returns An object containing a \"readStructs\" function that can read an array of the defined type from an ArrayBuffer\r\n   */\r\n  create: {\r\n    value: function(/* collected via arguments */) {\r\n      var type;\r\n      var properties = arguments[arguments.length - 1].structProperty\r\n        ? {}\r\n        : arguments[arguments.length - 1];\r\n\r\n      var byteLength = 0;\r\n      var struct = Object.create(Object.prototype, properties);\r\n\r\n      // This new struct will be assigned a unique name so that instances can be easily constructed later.\r\n      // It is not recommended that you use these names for anything outside this class, as they are not\r\n      // intended to be stable from run to run.\r\n      Object.defineProperty(struct, \"struct_type_id\", {\r\n        value: \"struct_id_\" + nextStructId,\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false,\r\n      });\r\n      Object.defineProperty(this, struct.struct_type_id, {\r\n        value: struct,\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false,\r\n      });\r\n      nextStructId += 1;\r\n\r\n      // Build the code to read a single struct, calculate byte lengths, and define struct properties\r\n      var readCode =\r\n        \"(function(o) { var st = Object.create(Struct.\" +\r\n        struct.struct_type_id +\r\n        \");\\n\";\r\n      for (var i = 0; i < arguments.length; ++i) {\r\n        type = arguments[i];\r\n        if (!type.structProperty) {\r\n          continue;\r\n        }\r\n        if (type.name) {\r\n          Object.defineProperty(struct, type.name, {\r\n            value: type.defaultValue,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n          });\r\n          readCode += \"st.\" + type.name + \" = \" + type.readCode + \"\\n\";\r\n        }\r\n        readCode += \"o += \" + type.byteLength + \";\\n\";\r\n        byteLength += type.byteLength;\r\n      }\r\n      readCode += \"return st; })(o);\";\r\n\r\n      // Build the code to read an array of this struct type\r\n      var parseScript = \"var a = new Array(count);\\n var s;\\n\";\r\n      parseScript += \"var v = new DataView(arrayBuffer, offset);\\n\"; // TODO: I should be able to specify a length here (count * this.byteLength), but it consistently gives me an INDEX_SIZE_ERR. Wonder why?\r\n      parseScript += \"var o = 0, so = 0;\\n\";\r\n      parseScript += \"for(var i = 0; i < count; ++i) {\\n\";\r\n      parseScript += \"    so = o;\\n\";\r\n      parseScript += \"    s = \" + readCode + \"\\n\";\r\n      parseScript += \"    o += this.byteLength;\\n\";\r\n      parseScript += \"    if(callback) { callback(s, offset+so); }\\n\";\r\n      parseScript += \"    a[i] = s;\\n\";\r\n      parseScript += \"}\\n\";\r\n      parseScript += \"return a;\\n\";\r\n\r\n      Object.defineProperty(struct, \"byteLength\", {\r\n        value: byteLength,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n      });\r\n      Object.defineProperty(struct, \"readCode\", {\r\n        value: readCode,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true,\r\n      });\r\n\r\n      var parseFunc = new Function(\r\n        \"arrayBuffer\",\r\n        \"offset\",\r\n        \"count\",\r\n        \"callback\",\r\n        parseScript\r\n      );\r\n      Object.defineProperty(struct, \"readStructs\", {\r\n        value: parseFunc,\r\n        configurable: true,\r\n        writable: true,\r\n      });\r\n\r\n      return struct;\r\n    },\r\n  },\r\n\r\n  //\r\n  // Utility functions to read simple arrays of data from a buffer\r\n  //\r\n\r\n  /**\r\n   * Read an ASCII string from an ArrayBuffer\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param length Optional, number of characters to read. If not given will read until a NULL char is reached\r\n   */\r\n\r\n  readString: {\r\n    value: function(buffer, offset, length) {\r\n      var str = \"\",\r\n        charBuffer;\r\n\r\n      // Hm... any way I can do this?\r\n      //var str = String.fromCharCode.apply(charBuffer);\r\n\r\n      if (length) {\r\n        charBuffer = new Uint8Array(buffer, offset, length);\r\n\r\n        for (var i = 0; i < length; ++i) {\r\n          var char = charBuffer[i];\r\n          if (char === 0) {\r\n            break;\r\n          }\r\n          str += String.fromCharCode(char);\r\n        }\r\n      } else {\r\n        charBuffer = new Uint8Array(buffer, offset);\r\n\r\n        i = 0;\r\n        while (true) {\r\n          char = charBuffer[i++];\r\n          if (char === 0) {\r\n            break;\r\n          }\r\n          str += String.fromCharCode(char);\r\n        }\r\n      }\r\n      return str;\r\n    },\r\n  },\r\n\r\n  // I wonder if there's a more efficent way to do these that doesn't run afoul the offset restrictions of TypedArrays\r\n\r\n  /**\r\n   * Read an array of 8 bit integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readInt8Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Int8Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getInt8(i, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 8 bit unsigned integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readUint8Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Uint8Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getUint8(i, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 16 bit integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readInt16Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Int16Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getInt16(i * 2, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 16 bit unsigned integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readUint16Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Uint16Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getUint16(i * 2, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 32 bit integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readInt32Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Int32Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getInt32(i * 4, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 32 bit unsigned integers\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of integers to read\r\n   */\r\n  readUint32Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Uint32Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getUint32(i * 4, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n\r\n\r\n  /**\r\n   * Read an array of 32 bit floats\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of floats to read\r\n   */\r\n  readFloat32Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Float32Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getFloat32(i * 4, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Read an array of 64 bit floats\r\n   * @param buffer Buffer to read from\r\n   * @param offset Offset in bytes to start reading at\r\n   * @param elements Number of floats to read\r\n   */\r\n  readFloat64Array: {\r\n    value: function(buffer, offset, elements) {\r\n      var array = new Float64Array(elements);\r\n      var v = new DataView(buffer, offset);\r\n      for (var i = 0; i < elements; ++i) {\r\n        array[i] = v.getFloat64(i * 8, true);\r\n      }\r\n      return array;\r\n    },\r\n  },\r\n});\r\n\r\nexport { Struct };\r\n","module.exports = __webpack_public_path__ + \"img/类脑计算机.7fc9a32c.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <!-- router-link定义页面中点击触发部分 -->\r\n    <!-- <div id=\"nav\">\r\n      <router-link to=\"/\">Home</router-link> |\r\n      <router-link to=\"/node?nodeID=0\">Node</router-link> |\r\n      <router-link to=\"/chip?nodeID=0&chipID=3\">Chip</router-link> |\r\n      <router-link to=\"/model\">Model</router-link> |\r\n      <router-link to=\"/uploadModel\">UploadModel</router-link> |\r\n      <router-link to=\"/task\">Task</router-link> |\r\n      <router-link to=\"/taskDetail?nodeID=0&modelID=7\">TaskDetail</router-link>\r\n      |\r\n      <router-link to=\"/boardsData\">BoardsData</router-link> |\r\n      <router-link to=\"/about\">About</router-link>\r\n    </div> -->\r\n    <!-- router-view定义页面中显示部分 -->\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport $ from \"jquery\";\r\nimport { get_slave_boards } from \"./js/os/get_slave_boards.js\";\r\nimport { get_chip_matrix } from \"./js/os/get_chip_matrix\";\r\n\r\n$(function() {\r\n  var bodyH = $(window).height();\r\n  console.log(bodyH);\r\n  var h = bodyH;\r\n  $(\"#app\").height(h);\r\n});\r\n\r\nfunction updateTreeView() {\r\n  let JSONdata = {\r\n    nodes: [],\r\n    models: [],\r\n    tasks: []\r\n  };\r\n\r\n  //测试用\r\n  /*  let node = {\r\n        ip: \"192.0.0.0\",\r\n        id: 1,\r\n        chips: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        usedNeureNums:[120,120,120,120,120,120,120,120,120,120,120,120],\r\n        role: 1,  //节点角色，1-master, 2-shadow,3-slave\r\n      };\r\n      JSONdata.nodes.push(node);\r\n\r\nnode = {\r\n        ip: \"192.0.0.1\",\r\n        id: 4,\r\n        chips: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        usedNeureNums:[120,120,120,120,120,120,120,120,120,120,120,120],\r\n        role: 3,  //节点角色，1-master, 2-shadow,3-slave\r\n      };\r\n      JSONdata.nodes.push(node);\r\nlet model = {\r\n              id: 2,\r\n              name: \"zxc\",\r\n              nodeID: 1,\r\n              nodeIP: \"192.0.0.0\"              \r\n          }\r\nJSONdata.models.push(model)\r\nlet task = {\r\n              id: 4,\r\n              name: \"qwe\",\r\n              nodeID: 1,\r\n              nodeIP: \"192.0.0.0\"              \r\n          }\r\n          JSONdata.tasks.push(task)  */\r\n\r\n  get_slave_boards(function(slave_boards) {\r\n    for (let i = 0; i < slave_boards.length; i++) {\r\n      let slave_board = slave_boards[i];\r\n      if (slave_board[\"board_status\"] == 1) {\r\n        let node = {\r\n          ip: slave_board[\"ip_address\"].join(\".\"),\r\n          id: slave_board[\"board_id\"],\r\n          chips: slave_board[\"chips\"],\r\n          usedNeureNums: [],\r\n          role: slave_board[\"board_role\"] //节点角色，1-master, 2-shadow,3-slave\r\n        };\r\n        JSONdata.nodes.push(node);\r\n\r\n        let file_list = slave_board[\"file_list\"];\r\n        for (let j = 0; j < file_list.length; j++) {\r\n          let model_file = file_list[j];\r\n          //要显示在模型视图里面\r\n          if (\r\n            model_file[\"model_status\"] != 1 &&\r\n            model_file[\"model_size\"] != 0\r\n          ) {\r\n            let model = {\r\n              id: model_file[\"model_id\"],\r\n              name: model_file[\"model_name\"],\r\n              nodeID: node.id,\r\n              nodeIP: node.ip\r\n            };\r\n            JSONdata.models.push(model);\r\n          }\r\n          //要显示在任务视图里面\r\n          if (model_file[\"model_status\"] == 3) {\r\n            let task = {\r\n              id: model_file[\"model_id\"],\r\n              name: model_file[\"model_name\"],\r\n              nodeID: node.id,\r\n              nodeIP: node.ip\r\n            };\r\n            JSONdata.tasks.push(task);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // 发送给插件导航栏\r\n    console.log(\"app page get all boards data: \", JSONdata);\r\n    $.ajax({\r\n      url: \"http://localhost:5002/post\",\r\n      method: \"post\",\r\n      data: JSON.stringify(JSONdata),\r\n      // dataType: \"json\",   // 加上这个会进入error分支，即使返回200\r\n      success: function(response) {\r\n        console.log(response, \"page post success\");\r\n      },\r\n      error: function(error) {\r\n        console.error(error, \"page post error\");\r\n      }\r\n    });\r\n\r\n    // for (let i = 0; i < JSONdata.nodes.length; i++) {\r\n    //   let node = JSONdata.nodes[i];\r\n    //   let board_ip = node.ip;\r\n    //   let board_id = node.id;\r\n    //   for (let j = 0; j < node.chips.length; j++) {\r\n    //     let chipID = j;\r\n    //     let usedNeureNum = 0;\r\n    //     get_chip_matrix(board_ip, board_id, chipID, function (chip_matrix) {\r\n    //       for (let i = 0; i < chip_matrix.length; i++) {\r\n    //         if (chip_matrix[i][2] != 0) {\r\n    //           usedNeureNum++;\r\n    //         }\r\n    //       }\r\n    //     });\r\n    //     node.usedNeureNums.push(usedNeureNum);\r\n    //   }\r\n    // }\r\n  });\r\n}\r\n\r\nsetInterval(updateTreeView, 3000);\r\n\r\nexport default {};\r\n</script>\r\n\r\n<style>\r\n/** 入口统一颜色配置 */\r\n/** 风格1： 黑底白字 */\r\n/* @import './css/dark.css'; */\r\n/** 风格2： 白底黑字 */\r\n\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  min-height: 1000px;\r\n  text-align: center;\r\n}\r\n\r\n#nav {\r\n  padding: 30px;\r\n}\r\n\r\n#nav a {\r\n  font-weight: bold;\r\n}\r\n\r\n#nav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n</style>\r\n","//import echarts from 'echarts'  // 不可以用这个\r\nlet echarts = require(\"echarts\"); // 需要使用require方式引入库\r\n\r\n// https://www.makeapie.com/editor.html?c=xO6bpzhc_c\r\n\r\nvar myChart;\r\n\r\n\r\nvar colors = [\r\n    {\r\n        c1: \"#0054ff\",  // 根节点的颜色 - 深蓝\r\n        c2: \"#4e98ff\",  // 中蓝\r\n    },\r\n    {\r\n        c1: \"#77A4FF\",  // 未运行节点默认颜色 - 中蓝\r\n        c2: \"#AFD1FF\",  //  浅蓝\r\n    },\r\n    {\r\n        c1: \"#FF77E0\", // slave节点运行颜色 - 粉色\r\n        c2: \"#FFD1F9\",  // 浅粉色\r\n    },\r\n    {\r\n        c1: \"#FFA73C\", // 运行中shadow节点颜色 - 橙色\r\n        c2: \"#FFDDA6\",  // 浅橙色\r\n    },\r\n];\r\n\r\nvar toppoElementID = \"topologyEchart\";\r\n\r\nvar listRunNode = []; // 运行中节点个数\r\nvar masterNodeID = -1; // master节点ID\r\nvar shadowNodeID = -1; // shadow节点ID\r\n\r\nvar listData = [];  // 数组 只有一个元素，根节点\r\nvar list = [];\r\nvar links = [];\r\n\r\n\r\n\r\nvar option = {\r\n    // // backgroundColor: \"rgb(30, 30, 30)\",\r\n    toolbox: {\r\n        show: true,\r\n        left: \"right\",\r\n        right: 20,\r\n        top: \"bottom\",\r\n        bottom: 20,\r\n    },\r\n\r\n    selectedMode: \"false\",\r\n    bottom: 20,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    animationDuration: 1500,\r\n    animationEasingUpdate: \"quinticInOut\",\r\n    series: [\r\n        {\r\n            name: \"拓扑图\",\r\n            type: \"graph\",\r\n            hoverAnimation: false,\r\n            //'none'无部局，需要自己添加坐标,'circular'环形布局,'force'引导布局，出来的效果随机\r\n            layout: \"force\",\r\n            force: {\r\n                repulsion: 200,\r\n                edgeLength: 260,\r\n            },\r\n            nodeScaleRatio: 0.6,\r\n            draggable: true,\r\n            roam: true,\r\n            symbol: \"circle\",\r\n            data: list,\r\n            links: links,\r\n            focusNodeAdjacency: true,\r\n            scaleLimit: {\r\n                //所属组件的z分层，z值小的图形会被z值大的图形覆盖\r\n                min: 0.5, //最小的缩放值\r\n                max: 9, //最大的缩放值\r\n            },\r\n            edgeSymbol: [\"circle\", \"arrow\"],\r\n            edgeSymbolSize: [3, 6],\r\n            label: {\r\n                normal: {\r\n                    show: true,\r\n                    position: \"right\",\r\n                    color: \"#fff\",\r\n                    distance: 5,\r\n                    fontSize: 12,\r\n                },\r\n            },\r\n            lineStyle: {\r\n                normal: {\r\n                    width: 1.5,\r\n                    curveness: 0,\r\n                    type: \"solid\",\r\n                },\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\n\r\n\r\n/**\r\n * 获取所有节点数据，data结构体中的value表示节点id\r\n * @param {*} masterID  master节点的ID，作为根节点\r\n * @param {*} allNodeNum   所有节点数量，不包含master节点\r\n */\r\nfunction getData(masterID, allNodeNum) {\r\n    let data = {\r\n        name: \"根节点\",\r\n        value: masterID,\r\n        list: [],  // 根节点下的子节点\r\n    };\r\n    for (let i = 0; i <= allNodeNum; i++) {\r\n        if (i == masterID) {\r\n            continue;\r\n        }\r\n        let obj = {\r\n            name: \"节点\" + i,\r\n            value: i, // 节点ID\r\n            list: [],\r\n        };\r\n\r\n        data.list.push(obj);\r\n    }\r\n    var arr = [];\r\n    arr.push(data);\r\n    return arr;\r\n}\r\n\r\n\r\n// 计算links\r\nfunction handle3(arr, index, color) {\r\n    arr.forEach((item) => {\r\n        if (item.list) {\r\n            item.list.forEach((item2, eq) => {\r\n                if (index === 0) {\r\n                    // 线条颜色\r\n                    if (listRunNode.includes(item2.value)) {\r\n                        if (item2.value == shadowNodeID) {\r\n                            color = colors[3]; // shadow线条颜色\r\n                            item2.category = 2;\r\n                        } else {\r\n                            color = colors[2];\r\n                            item2.category = 1;\r\n                        }\r\n                    } else {\r\n                        color = colors[1];\r\n                        item2.category = 3;\r\n                    }\r\n                }\r\n                let lineStyle = null;\r\n                switch (index) {\r\n                    case 0:\r\n                        if (item2.list.length > 0) {\r\n                            lineStyle = {\r\n                                normal: {\r\n                                    color: \"target\",\r\n                                },\r\n                            };\r\n                        } else {\r\n                            lineStyle = {\r\n                                normal: {\r\n                                    color: color.c2,\r\n                                },\r\n                            };\r\n                        }\r\n                        break;\r\n                    default:\r\n                        lineStyle = {\r\n                            normal: {\r\n                                color: \"source\",\r\n                            },\r\n                        };\r\n                        break;\r\n                }\r\n                let obj = {\r\n                    source: item.name,\r\n                    target: item2.name,\r\n                    lineStyle,\r\n                };\r\n                links.push(obj);\r\n                if (item2.list && item.list.length > 0) {\r\n                    handle3(item.list, index + 1);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n//计算list\r\nfunction handle2(arr, idx, color, category) {\r\n    // idx=0 -- 根节点, idx=1 -- 子节点\r\n    arr.forEach((item, index) => {\r\n        if (item.name === null) {\r\n            return false;\r\n        }\r\n        // 设置节点大小\r\n        let symbolSize = 10;\r\n        switch (idx) {\r\n            case 0:\r\n                symbolSize = 87;\r\n                break;\r\n            case 1:\r\n                symbolSize = 67;\r\n                break;\r\n            default:\r\n                symbolSize = 10;\r\n                break;\r\n        }\r\n\r\n        // 每个节点所对应的文本标签的样式。\r\n        let label = null;\r\n        switch (idx) {\r\n            case 0:\r\n            case 1:\r\n                label = {\r\n                    position: \"inside\",\r\n                    rotate: 0,\r\n                };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //计算出颜色,从第二级开始\r\n        if (idx === 0) {\r\n            if (masterNodeID == -1) {  // master节点不在线\r\n                color = colors[1];\r\n            } else {\r\n                color = colors[0];\r\n            }\r\n        }\r\n\r\n        if (idx == 1) {\r\n            // 颜色\r\n            if (listRunNode.includes(item.value)) {  // item.value 表示节点id\r\n                if (item.value == shadowNodeID) {\r\n                    color = colors[3]; // 运行中shadow节点颜色\r\n                } else {\r\n                    color = colors[2];  // 运行中slave节点颜色\r\n                }\r\n            } else {\r\n                //color = colors.find((itemm, eq) => eq == index % 3);\r\n                color = colors[1];  // 没有运行的节点颜色\r\n            }\r\n\r\n        }\r\n        // 设置线条颜色\r\n        let lineStyle = {\r\n            color: color.c2,\r\n        };\r\n        // 设置节点样式\r\n        let bgcolor = null;\r\n        if (idx === 0) {\r\n            bgcolor = {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.5,\r\n                colorStops: [\r\n                    {\r\n                        offset: 0.2,\r\n                        color: color.c1, // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 0.8,\r\n                        color: color.c2, // 80% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: color.c2, // 100% 处的颜色 -- 灰黑色\r\n                    },\r\n                ],\r\n                global: false,\r\n            };\r\n        } else {\r\n            bgcolor = {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.5,\r\n                colorStops: [\r\n                    {\r\n                        offset: 0.2,\r\n                        color: color.c1, // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 0.8,\r\n                        color: color.c2, // 0% 处的颜色\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: color.c2, // 100% 处的颜色\r\n                    },\r\n                ],\r\n                global: false,\r\n            };\r\n        }\r\n        let itemStyle = null;\r\n        if (item.list && item.list.length !== 0) {\r\n            //非子节点 根节点\r\n            if (masterNodeID == -1) {\r\n                itemStyle = {\r\n                    color: color.c2,\r\n                    borderColor: color.c2,\r\n                };\r\n            } else {\r\n                itemStyle = {\r\n                    color: bgcolor,\r\n                    borderColor: color.c2,\r\n                };\r\n            }\r\n\r\n        } else {\r\n            //子节点\r\n            item.isEnd = true;\r\n            if (item.isdisease == \"true\") {\r\n                itemStyle = {\r\n                    color: bgcolor,\r\n                    borderColor: color.c2,\r\n                };\r\n            } else {\r\n                itemStyle = {   // 设置子节点的颜色，默认灰色#a0a0a0\r\n                    color: bgcolor,\r\n                    // borderColor: color.c2,\r\n                };\r\n            }\r\n        }\r\n        //可以改变来实现节点发光效果，但体验不好\r\n        itemStyle = Object.assign(itemStyle, {\r\n            shadowColor: \"rgba(255, 255, 255, 0.5)\",\r\n            shadowBlur: 10,\r\n        });\r\n\r\n        if (idx == 1) {\r\n            category = item.name;\r\n        }\r\n        let obj = {\r\n            name: item.name,\r\n            symbolSize: symbolSize,\r\n            category: category,\r\n            label,\r\n            color: bgcolor,\r\n            itemStyle,\r\n            lineStyle,\r\n        };\r\n        obj = Object.assign(item, obj);\r\n        if (idx === 0) {\r\n            obj = Object.assign(obj, {\r\n                root: true,\r\n            });\r\n        }\r\n        if (item.list && item.list.length === 0) {\r\n            obj = Object.assign(obj, {\r\n                isEnd: true,\r\n            });\r\n        }\r\n        list.push(obj);\r\n        if (item.list && item.list.length > 0) {\r\n            handle2(item.list, idx + 1, color, category);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * 显示首页时画图，系统异常（master节点不在线也要显示的）\r\n * @param {*} masterID  master节点ID\r\n * @param {*} shadowID  shadow节点的ID\r\n * @param {*} allNodeNum  所有节点个数（除了master节点）\r\n * @param {*} runNodeIDList  运行中节点的id（只包含slave节点）\r\n * @param {*} router  路由，用于单击节点执行跳转使用\r\n */\r\nfunction drawTopologyEchart(masterID, shadowID, allNodeNum, runNodeIDList, router) {\r\n    // 重新绘图前先清空\r\n    let dom = document.getElementById(toppoElementID);\r\n    let existInstance = echarts.getInstanceByDom(dom);\r\n    if (existInstance) {\r\n        if (true) {\r\n            echarts.dispose(existInstance);\r\n        }\r\n    }\r\n\r\n    // 获取数据\r\n    myChart = echarts.init(document.getElementById(toppoElementID));\r\n    masterNodeID = masterID;\r\n    shadowNodeID = shadowID;\r\n    listRunNode = runNodeIDList;\r\n    listData = getData(masterID, allNodeNum);\r\n\r\n\r\n    // 绘图\r\n    handle2(JSON.parse(JSON.stringify(listData)), 0);\r\n    handle3(JSON.parse(JSON.stringify(listData)), 0);\r\n    myChart.setOption(option);\r\n\r\n    // 添加节点点击事件\r\n    addNodeRouter(router)\r\n\r\n    //建议加上以下这一行代码，不加的效果图如下（当浏览器窗口缩小的时候）。超过了div的界限（红色边框）\r\n    window.addEventListener(\"resize\", function () {\r\n        myChart.resize();\r\n    });\r\n}\r\n\r\n/**\r\n * 系统正常运行后，获取节点信息后，刷新拓扑图使用\r\n * @param {*} masterID  master节点ID\r\n * @param {*} shadowID  shadow节点的ID\r\n * @param {*} allNodeNum  所有节点个数（除了master节点）\r\n * @param {*} runNodeIDList  运行中节点的id（只包含slave节点）\r\n * @param {*} router  路由，用于单击节点执行跳转使用\r\n */\r\nfunction refreshEchart(masterID, shadowID, allNodeNum, runNodeIDList, router) {\r\n    //刷新数据\r\n    masterNodeID = masterID;\r\n    shadowNodeID = shadowID;\r\n    listRunNode = runNodeIDList;\r\n    list = [];\r\n    links = [];\r\n    var option = myChart.getOption();\r\n    listData = getData(masterID, allNodeNum);\r\n\r\n    handle2(JSON.parse(JSON.stringify(listData)), 0);\r\n    handle3(JSON.parse(JSON.stringify(listData)), 0);\r\n\r\n    option.series[0].data = list;\r\n    option.series[0].links = links;\r\n    myChart.setOption(option);\r\n    addNodeRouter(router)\r\n    window.addEventListener(\"resize\", function () {\r\n        myChart.resize();\r\n    });\r\n}\r\n\r\n/**\r\n *  添加节点点击事件\r\n * @param {*} router  页面传递过来的全局的路由器对象\r\n */\r\nfunction addNodeRouter(router) {\r\n    myChart.on(\r\n        'click',\r\n        (param) => {\r\n            // console.log('param---->', param);  // 打印出param, 可以看到里边有很多参数可以使用\r\n            //获取被点击节点的id\r\n            var arrayIndex = param.data.value;\r\n            if ((param.dataType == 'node' && arrayIndex != -1) && (listRunNode.includes(arrayIndex) || masterNodeID == arrayIndex)) {\r\n                // let routeData = router.resolve({\r\n                //     path: \"/node\",\r\n                //     query: { nodeID: arrayIndex },\r\n                // });\r\n                // window.open(routeData.href, '_blank'); // 浏览器新开一个窗口，但是集成到vscode中不能跳转\r\n                router.push({\r\n                    path: \"/node\",\r\n                    query: { nodeID: arrayIndex },\r\n                });\r\n            } else {\r\n                console.log(\"节点不在线\");\r\n                //alert(\"点击了边\" + param.value);\r\n            }\r\n        });\r\n}\r\n\r\nexport { drawTopologyEchart, refreshEchart };","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7ef98478&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home_page\"},[_c('div',[_c('div',{staticClass:\"home_introduction\"},[_vm._m(0),_c('br'),_c('table',{staticClass:\"home_hovertable\"},[_vm._m(1),_c('tr',[_c('td',[_vm._v(\"健康状态\")]),_c('td',[(_vm.systemStatus == 1)?[_c('div',{staticClass:\"home_statusOkLogo\"}),_c('span',[_vm._v(\" 健康\")])]:(_vm.systemStatus == 0)?[_c('div',{staticClass:\"home_statusErrLogo\"}),_c('span',[_vm._v(\" 系统异常\")])]:_vm._e()],2)]),_vm._m(2),_c('tr',[_c('td',[_vm._v(\"节点总数\")]),_c('td',[_vm._v(_vm._s(_vm.totalNodeNum))])]),_c('tr',[_c('td',[_vm._v(\"Master节点数\")]),_c('td',[_vm._v(_vm._s(_vm.masterNodeNum))])]),_c('tr',[_c('td',[_vm._v(\"Shadow节点数\")]),_c('td',[_vm._v(_vm._s(_vm.shadowNodeNum))])]),_c('tr',[_c('td',[_vm._v(\"Slave节点数\")]),_c('td',[_vm._v(_vm._s(_vm.slaveNodeNum))])]),_c('tr',[_c('td',[_vm._v(\"运行中节点数\")]),_c('td',[_vm._v(_vm._s(_vm.runNodeNum))])]),_c('tr',[_c('td',[_vm._v(\"芯片总数\")]),_c('td',[_vm._v(_vm._s(_vm.totalChipNum))])]),_c('tr',[_c('td',[_vm._v(\"运行中芯片数\")]),_c('td',[_vm._v(_vm._s(_vm.runChipNum))])]),_c('tr',[_c('td',[_vm._v(\"神经元簇总数\")]),_c('td',[_vm._v(_vm._s(_vm.totalNeureNum))])]),_c('tr',[_c('td',[_vm._v(\"运行中神经元簇个数\")]),_c('td',[_vm._v(_vm._s(_vm.runNeureNum))])])])]),_vm._m(3)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home_logo_box\"},[_c('img',{staticClass:\"home_os_logo\",attrs:{\"src\":require(\"../images/类脑计算机.png\"),\"alt\":\"darwin os\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_vm._v(\"系统名称\")]),_c('td',[_vm._v(\"达尔文类脑计算机系统\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_vm._v(\"版本号\")]),_c('td',[_vm._v(\"V1\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home_topology\"},[_c('div',{attrs:{\"id\":\"topologyEchart\"}}),_c('div',{staticClass:\"home_node_logoBox\"},[_c('div',{staticClass:\"home_coommonNodeLogo masterNodeLogo\"}),_c('span',{staticClass:\"home_logoDesc\"},[_vm._v(\" master节点\")]),_c('div',{staticClass:\"home_coommonNodeLogo shadowNodeLogo\"}),_c('span',{staticClass:\"home_logoDesc\"},[_vm._v(\" shadow节点\")]),_c('div',{staticClass:\"home_coommonNodeLogo slaveNodeLogo\"}),_c('span',{staticClass:\"home_logoDesc\"},[_vm._v(\" slave节点\")]),_c('div',{staticClass:\"home_coommonNodeLogo outlineNodeLogo\"}),_c('span',{staticClass:\"home_logoDesc\"},[_vm._v(\" 不在线节点\")])])])}]\n\nexport { render, staticRenderFns }","\r\nimport { get_slave_boards } from \"../os/get_slave_boards.js\";\r\nimport { drawTopologyEchart, refreshEchart } from \"../echarts/get_topology_echarts.js\"\r\n\r\nvar vue_controler = {\r\n    name: \"App\",\r\n    data() {\r\n        return {\r\n            input_board_id: -1,\r\n            nodeList: [],  // 60个节点大小\r\n\r\n            // 首页：系统信息介绍部分使用的数据\r\n            totalNodeNum: 60,\r\n            notMasterNodeNum: 59,  // 非master节点个数\r\n\r\n            masterNodeNum: 0,\r\n            shadowNodeNum: 0,  // shadow节点个数\r\n            slaveNodeNum: 0,\r\n\r\n            runNodeNum: 0, // 包含master节点\r\n            systemStatus: 0,  // 1表示健康，0表示异常\r\n            totalChipNum: 60 * 12,\r\n            runChipNum: 0,\r\n            totalNeureNum: 60 * 12 * 24 * 24,\r\n            runNeureNum: 0,\r\n            runNodeIDList: [], // 存放运行中节点的id列表,不含master节点\r\n            masterNodeID: 1, // master节点默认id，系统运行后不一定是多少，只有ip固定\r\n\r\n            shadowNodeID: -1, // shadow节点id\r\n\r\n            // 节点详情页面使用的数据\r\n            runNodeInfo: [], // 运行中节点信息\r\n        };\r\n    },\r\n    mounted() {\r\n        let _this = this;\r\n        // 回调函数参数slave_boards是在线节点数组\r\n        get_slave_boards(function (slave_boards) {\r\n            /* _node_list */\r\n            let _node_list = [];\r\n            for (let i = 0; i < slave_boards.length; i++) {\r\n                let slave_board = slave_boards[i];\r\n                let node = {\r\n                    ip: slave_board[\"ip_address\"].join(\".\"),\r\n                    id: slave_board[\"board_id\"],\r\n                    status: slave_board[\"board_status\"],\r\n                    chips: slave_board[\"chips\"],\r\n                    file_list: slave_board[\"file_list\"],\r\n                    rule: slave_board[\"board_role\"],  //节点角色，1-master, 2-shadow,3-slave\r\n                };\r\n                _node_list.push(node);\r\n                // master节点信息\r\n                if (node.ip == \"192.168.1.254\") {\r\n                    _this.masterNodeID = node.id;\r\n                    _this.masterNodeNum++;\r\n                } else {\r\n                    _this.runNodeIDList.push(slave_board[\"board_id\"]);\r\n                }\r\n                // shadow节点信息\r\n                if (node.rule == 2) {\r\n                    _this.shadowNodeID = node.id;\r\n                    _this.shadowNodeNum++;\r\n                }\r\n            }\r\n\r\n            // begin init nodeList， 初始化大小为60节点\r\n            let empty_node_matrix_data = new Array(72).fill(new Array(96).fill(0));\r\n            // 每个节点上12个芯片，每个芯片有24*24个神经元簇，神经元矩阵图按照3行4列展示，所以共72*96个神经元簇\r\n            for (let i = 0; i < 60; i++) {\r\n                // 总共60个节点（大板子）-1个master 59个slave\r\n                let empty_node = {\r\n                    ip: ((i) => {\r\n                        if (i == 0) {\r\n                            return \"192.168.1.254\"; // master节点\r\n                        } else {\r\n                            return \"192.168.1.\" + (i + 1);\r\n                        }\r\n                    })(i),\r\n                    id: i + 1,\r\n                    status: 1,\r\n                    chips: new Array(12).fill(0),\r\n                    node_matrix_data: empty_node_matrix_data,\r\n                };\r\n                _this.nodeList.push(empty_node);\r\n            }\r\n            // end init nodeList\r\n\r\n            // start update system info\r\n            _this.systemStatus = 1;\r\n\r\n            _this.runNodeNum = slave_boards.length;\r\n            _this.runChipNum = _this.runNodeNum * 12;\r\n            _this.runNeureNum = _this.runChipNum * 24 * 24;\r\n\r\n            _this.slaveNodeNum = _this.runNodeNum - _this.masterNodeNum - _this.shadowNodeNum;\r\n            _this.runNodeInfo = _this._node_list;\r\n            // end update system info\r\n\r\n            // todo：更新拓扑图：节点颜色\r\n            // 获取运行中节点的id数组\r\n            // console.log(\"************\", _this.masterNodeID,  _this.runNodeIDList);\r\n\r\n            refreshEchart(_this.masterNodeID, _this.shadowNodeID, _this.notMasterNodeNum, _this.runNodeIDList, _this.$router);\r\n\r\n        });\r\n\r\n        // test\r\n        // _this.runNodeIDList.push(0)\r\n        // _this.runNodeIDList.push(4)\r\n        // drawTopologyEchart(11, 4, this.notMasterNodeNum, [4, 6], this.$router)\r\n        // 导入系统结构拓扑图\r\n        drawTopologyEchart(_this.masterNodeID, _this.shadowNodeID, this.notMasterNodeNum, this.runNodeIDList, this.$router);\r\n\r\n    },\r\n    // 解决 echart 图像在路由跳转后不显示问题\r\n    beforeRouteEnter(to, from, next) {\r\n        next(vm => {\r\n            if (to.name == \"Home\" && (from.name != null && from.name != \"Home\")) {\r\n                console.log(\"reload home page\")\r\n                window.location.reload()\r\n            }\r\n        });\r\n    },\r\n    watch: {\r\n\r\n    },\r\n    methods: {\r\n\r\n    },\r\n};\r\n\r\n\r\n\r\nexport { vue_controler };\r\n","<template>\r\n  <div class=\"home_page\">\r\n    <div>\r\n      <div class=\"home_introduction\">\r\n        <div class=\"home_logo_box\">\r\n          <img\r\n            src=\"../images/类脑计算机.png\"\r\n            alt=\"darwin os\"\r\n            class=\"home_os_logo\"\r\n          />\r\n        </div>\r\n        <br />\r\n\r\n        <table class=\"home_hovertable\">\r\n          <tr>\r\n            <td>系统名称</td>\r\n            <td>达尔文类脑计算机系统</td>\r\n          </tr>\r\n          <tr>\r\n            <td>健康状态</td>\r\n            <td>\r\n              <template v-if=\"systemStatus == 1\">\r\n                <div class=\"home_statusOkLogo\"></div>\r\n                <span> 健康</span>\r\n              </template>\r\n              <template v-else-if=\"systemStatus == 0\">\r\n                <div class=\"home_statusErrLogo\"></div>\r\n                <span> 系统异常</span>\r\n              </template>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>版本号</td>\r\n            <td>V1</td>\r\n          </tr>\r\n          <tr>\r\n            <td>节点总数</td>\r\n            <td>{{ totalNodeNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Master节点数</td>\r\n            <td>{{ masterNodeNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Shadow节点数</td>\r\n            <td>{{ shadowNodeNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Slave节点数</td>\r\n            <td>{{ slaveNodeNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>运行中节点数</td>\r\n            <td>{{ runNodeNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>芯片总数</td>\r\n            <td>{{ totalChipNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>运行中芯片数</td>\r\n            <td>{{ runChipNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>神经元簇总数</td>\r\n            <td>{{ totalNeureNum }}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>运行中神经元簇个数</td>\r\n            <td>{{ runNeureNum }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"home_topology\">\r\n        <div id=\"topologyEchart\"></div>\r\n\r\n        <div class=\"home_node_logoBox\">\r\n          <div class=\"home_coommonNodeLogo masterNodeLogo\"></div>\r\n          <span class=\"home_logoDesc\"> master节点</span>\r\n          <div class=\"home_coommonNodeLogo shadowNodeLogo\"></div>\r\n          <span class=\"home_logoDesc\"> shadow节点</span>\r\n          <div class=\"home_coommonNodeLogo slaveNodeLogo\"></div>\r\n          <span class=\"home_logoDesc\"> slave节点</span>\r\n          <div class=\"home_coommonNodeLogo outlineNodeLogo\"></div>\r\n          <span class=\"home_logoDesc\"> 不在线节点</span>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { vue_controler } from \"../js/pages/home\";\r\n\r\nimport { Struct } from \"../js/utils/jsStruct\";\r\n\r\nimport $ from \"jquery\";\r\n\r\n$(function() {\r\n  var bodyH = $(window).height();\r\n  console.log(\"***\", bodyH);\r\n  var h = bodyH - 150;\r\n  $(\".home\").height(h);\r\n  $(\".box\").height(h);\r\n});\r\n\r\nwindow.Struct = Struct;\r\n\r\nexport default vue_controler;\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n#topologyEchart {\r\n  width: 100%;\r\n  height: 96%;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=aaf03a0a&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst originalPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push(location) {\r\n  return originalPush.call(this, location).catch(err => err)\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',  // 资源视图首页\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/node',  // 节点详情页面\r\n    name: 'Node',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/NodeInfo.vue')\r\n  },\r\n  {\r\n    path: '/chip',  // 芯片详情页面\r\n    name: 'Chip',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/ChipInfo.vue')\r\n  },\r\n  {\r\n    path: '/model',  // 模型详情页面\r\n    name: 'Model',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/ModelInfo.vue')\r\n  },\r\n  {\r\n    path: '/uploadModel',  // 上传模型文件页面\r\n    name: 'UploadModel',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/UploadModel.vue')\r\n  },\r\n  {\r\n    path: '/task',  // 模型详情页面\r\n    name: 'Task',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/TaskInfo.vue')\r\n  },\r\n  {\r\n    path: '/taskDetail',  // 任务详情页面\r\n    name: 'TaskDetail',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/TaskDetail.vue')\r\n  },\r\n  {\r\n    path: '/appDetail',  // 应用详情页面\r\n    name: 'AppDetail',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AppDetail.vue')\r\n  },\r\n  {\r\n    path: '/boardsData',  // 模型详情页面\r\n    name: 'BoardsData',\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/BoardsData.vue')\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'About',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  routes,\r\n  // vue-router默认hash模式——使用URL的hash来模拟一个完整的URL，于是当URL改变时，页面不会重新加载\r\n  // history 模式会导致打包后<route-view>不显示\r\n  // mode: \"history\",\r\n})\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nimport Element from 'element-ui'\r\nimport \"element-ui/lib/theme-chalk/index.css\"\r\nVue.use(Element)\r\n\r\n\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import { Struct } from \"./jsStruct\";\r\n\r\nfunction arrayBufferToBuffer(arrayBuffer) {\r\n  var buf = new Buffer(arrayBuffer.byteLength);\r\n  var view = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < buf.length; ++i) {\r\n    buf[i] = view[i];\r\n  }\r\n  return buf;\r\n}\r\n\r\nfunction extract_data(raw_data) {\r\n  var p = 0;\r\n  var ret = [];\r\n  var slice_len = 0;\r\n  while (p < raw_data.length) {\r\n    slice_len = Number(raw_data[p]);\r\n    ret = ret.concat(raw_data.slice(p + 1, p + 1 + slice_len));\r\n    p += slice_len + 1;\r\n  }\r\n  return ret;\r\n}\r\n\r\n/********************************************************\r\n * description: caculate sum of number array\r\n * parameters:\r\n *   array_: number array\r\n * return:\r\n *   sum: sum of number array\r\n * author: happy\r\n * date: 20200713\r\n *********************************************************/\r\nfunction array_sum(array_) {\r\n  var sum = 0;\r\n  for (var i = 0; i < array_.length; i++) {\r\n    sum += array_[i];\r\n  }\r\n  return sum;\r\n}\r\n\r\n/********************************************************\r\n * description: if two array have same element, return true\r\n * parameters:\r\n *   array1: number array\r\n *   array2: number array\r\n * return:\r\n *   is_same: true/false\r\n * author: happy\r\n * date: 20200713\r\n *********************************************************/\r\nfunction array_equal(array1, array2) {\r\n  if (array1.length != array2.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < array1.length; i++) {\r\n    if (array1[i] != array2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/********************************************************\r\n * description: insert x to data(array), if the length of data\r\n *           is too long, the first item of data will be removed\r\n * parameters:\r\n *   input:\r\n *     x: number\r\n *   output:\r\n *     data: number array\r\n * author: happy\r\n * date: 20200713\r\n *********************************************************/\r\nfunction walk_data(data, x, data_length = 60) {\r\n  if (data.length == 0) {\r\n    data.push([0, x]);\r\n  } else {\r\n    data.push([data[data.length - 1][0] + 1, x]);\r\n  }\r\n\r\n  if (data.length > data_length - 1) {\r\n    data.shift();\r\n  }\r\n}\r\n\r\nfunction array_mean(array_) {\r\n  var avg = 0;\r\n  for (var i = 0; i < array_.length; i++) {\r\n    avg = (avg * i + array_[i]) / (i + 1);\r\n  }\r\n  return avg;\r\n}\r\n\r\nfunction blob_to_uint32(blob_buf, callback) {\r\n  let reader = new FileReader();\r\n  reader.readAsArrayBuffer(blob_buf);\r\n  reader.onload = function (e) {\r\n    let array_buffer = reader.result;\r\n    var struct_length = 4;\r\n    var struct_num = Math.ceil(array_buffer.byteLength / struct_length);\r\n    var _uint32_array = Struct.create(\r\n      Struct.array(\"uint32_array\", Struct.uint32(), struct_num)\r\n    );\r\n    _uint32_array = _uint32_array.readStructs(array_buffer, 0, 1);\r\n    _uint32_array = _uint32_array[0].uint32_array;\r\n    var uint32_array = [];\r\n    for (var i = 0; i < _uint32_array.length; i++) {\r\n      uint32_array.push(Number(_uint32_array[i]));\r\n    }\r\n    callback(uint32_array);\r\n  };\r\n}\r\n\r\nfunction trancat(array, min, max) {\r\n  for (let i = 0; i < array.length; i++) {\r\n    array[i] = Math.min(Math.max(array[i], min), max)\r\n  }\r\n}\r\n\r\nexport {\r\n  extract_data,\r\n  array_sum,\r\n  array_equal,\r\n  walk_data,\r\n  array_mean,\r\n  blob_to_uint32,\r\n  arrayBufferToBuffer,\r\n  trancat\r\n};\r\n","import { Struct } from \"../utils/jsStruct\";\r\nimport $ from \"jquery\";\r\n\r\n/* get board list from back end*/\r\nfunction get_slave_boards(call_back) {\r\n  let ip_str = \"192.168.1.254\"; // master 节点的ip\r\n  console.log(\"发送请求。。。。\")\r\n  $.ajax({\r\n    url: \"http://\" + ip_str + \"/request_file_list/\",\r\n    type: \"post\",\r\n    data: { placeholder: 1 },\r\n    cache: false,\r\n    xhr: function () {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.responseType = \"blob\";\r\n      return xhr;\r\n    },\r\n    success: function (blob_buf) {\r\n      // console.log(\"$$$\", blob_buf);\r\n      var reader = new FileReader();\r\n      reader.onload = function () {\r\n        var array_buffer = reader.result; // 原始的二进制数据，可以被jsStruct使用的数据类型\r\n        var MAX_NAME_LEN = 32;\r\n        var MAX_FILE_NUM = 20;\r\n        let struct_size = 2100;\r\n        let struct_num = Math.floor(array_buffer.byteLength / struct_size);\r\n        // var MAX_SLAVE_NUM = 80;\r\n        var model_file = Struct.create(\r\n          Struct.uint16(\"model_id\"),\r\n          Struct.uint32(\"model_size\"),\r\n          Struct.string(\"model_name\", MAX_NAME_LEN),\r\n          Struct.string(\"real_model_name\", MAX_NAME_LEN),\r\n          Struct.string(\"md5\", 32),\r\n          Struct.uint8(\"model_status\")\r\n        );\r\n        var board_info = Struct.create(\r\n          Struct.uint16(\"board_id\"),\r\n          Struct.array(\"ip_address\", Struct.uint8(), 4),\r\n          Struct.uint8(\"board_status\"),\r\n          Struct.uint8(\"noresp\"),\r\n          Struct.array(\"chips\", Struct.uint8(), 12),\r\n          Struct.string(\"version\", 8),\r\n          Struct.array(\"file_list\", model_file, MAX_FILE_NUM),\r\n          Struct.uint32(\"_config_list\"),\r\n          Struct.uint32(\"_app_list\"),\r\n          Struct.uint32(\"_slave_tcpb\"),\r\n          Struct.uint8(\"board_role\")\r\n        );\r\n        // slave_boards_0 系统中返回所有节点数据，包含master节点\r\n        var slave_boards_0 = board_info.readStructs(\r\n          /* readStructs 函数解析二进制数据， 包含master节点*/\r\n          array_buffer,\r\n          0,\r\n          struct_num\r\n        );\r\n\r\n\r\n        /*\r\n        // 调试用：取数据\r\n        var FileSaver = require('file-saver'); \r\n        var sFile = \"/home/ubuntu/Desktop/nodeInfo.txt\";\r\n        var content = JSON.stringify(slave_boards_0);\r\n        console.log(\"content\", content)\r\n        var blob = new Blob([content ], {type: \"text/plain;charset=utf-8\"}); \r\n        console.log(\"blob\", blob)\r\n        FileSaver.saveAs(blob, sFile);\r\n        console.log(\"slave_boards_0: \", slave_boards_0)\r\n        */\r\n\r\n        /* select board with  board_status==1 */\r\n        // slave_boards 返回的是在线节点\r\n        let slave_boards = [];\r\n        for (let i = 0; i < slave_boards_0.length; i++) {\r\n          let board_info = slave_boards_0[i];\r\n          if (board_info[\"board_status\"] == 1) {\r\n            slave_boards.push(board_info);\r\n          }\r\n        }\r\n\r\n        console.log(\"在线节点: \", slave_boards);\r\n\r\n        call_back(slave_boards);\r\n      };\r\n      reader.readAsArrayBuffer(blob_buf);\r\n    },\r\n    error: function (xhr) {\r\n      // alert(\"err: \", xhr.status);\r\n      // let slave_boards = [];\r\n      // call_back(slave_boards);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\nexport { get_slave_boards };\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}